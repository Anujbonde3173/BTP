write a program in solidity to create student data use following constructs-
.Structures
.Arrays
.Fallback

Deploy this as smart contract on ethereum and observe the transction fee and gas value.

BT

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract BankAccount {
    address public owner;
    uint256 public balance;

    constructor() {
        owner = msg.sender;
    }

    modifier onlyOwner() {
        require(msg.sender == owner, "Only the owner can perform this operation");
        _;
    }

    function deposit(uint256 amount) public onlyOwner {
        require(amount > 0, "Deposit amount must be greater than 0");
        balance += amount;
    }

    function withdraw(uint256 amount) public onlyOwner {
        require(amount > 0, "Withdrawal amount must be greater than 0");
        require(amount <= balance, "Insufficient balance");
        balance -= amount;
    }

    function getBalance() public view returns (uint256) {
        return balance;
    }
}

write a program non-recursive and recursive program to calculate fibonaccie number and analyse time and space complexity.
DAA Recursive 

 public class FiboRecursive {
    public static int fib(int n) {
        if (n <= 1)
        return n;
        return fib(n - 1) + fib(n - 2);}
    public static void main(String args[]) {
        int N = 10;
        for (int i = 0; i < N; i++) {
            System.out.print(fib(i) + " ");
}
}
}




DAA Omkar   Non Recursive
class DAA {
    public static void main(String args[]) {
        int n=9;
        int n1=0,n2=1,n3=0;
        System.out.print(n1+" "+n2);
        for(int i=2;i<n;i++){
            n3=n1+n2;
            System.out.print(" "+n3+" ");
            n1=n2;
            n2=n3;
        }
}
}



